[33mcommit 2dbfa18453b47c6e8de6b34bdb27b070632b2490[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m)[m
Author: slimafilipe <limafilipe.coding@gmail.com>
Date:   Sat Jul 19 17:54:50 2025 -0300

    feat: add scheduling

[1mdiff --git a/src/main/java/com/agendeai/controller/SchedulingController.java b/src/main/java/com/agendeai/controller/SchedulingController.java[m
[1mnew file mode 100644[m
[1mindex 0000000..beacc68[m
[1m--- /dev/null[m
[1m+++ b/src/main/java/com/agendeai/controller/SchedulingController.java[m
[36m@@ -0,0 +1,40 @@[m
[32m+[m[32mpackage com.agendeai.controller;[m
[32m+[m
[32m+[m[32mimport com.agendeai.dto.SchedulingCreateDTO;[m
[32m+[m[32mimport com.agendeai.dto.SchedulingDTO;[m
[32m+[m[32mimport com.agendeai.dto.SchedulingResponseDTO;[m
[32m+[m[32mimport com.agendeai.service.SchedulingService;[m
[32m+[m[32mimport jakarta.validation.Valid;[m
[32m+[m[32mimport lombok.RequiredArgsConstructor;[m
[32m+[m[32mimport org.springframework.http.ResponseEntity;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.*;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32m@RestController[m
[32m+[m[32m@RequestMapping("/api/scheduling")[m
[32m+[m[32m@RequiredArgsConstructor[m
[32m+[m[32mpublic class SchedulingController {[m
[32m+[m
[32m+[m[32m    private final SchedulingService service;[m
[32m+[m
[32m+[m[32m    @PostMapping[m
[32m+[m[32m    public SchedulingDTO toSchedule(@RequestBody @Valid SchedulingCreateDTO dto){[m
[32m+[m[32m        return service.toSchedule(dto);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @GetMapping("/barbers/{barberId}")[m
[32m+[m[32m    public List<SchedulingDTO> findByBarber(@PathVariable Long barberId){[m
[32m+[m[32m        return service.findByBarber(barberId);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @GetMapping("/clients/{clientId}")[m
[32m+[m[32m        public List<SchedulingDTO> findByClient(@PathVariable Long clientId){[m
[32m+[m[32m            return service.findByClient(clientId);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m    @GetMapping[m
[32m+[m[32m    public ResponseEntity<List<SchedulingResponseDTO>> listAll(){[m
[32m+[m[32m        return ResponseEntity.ok(service.listAll());[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/src/main/java/com/agendeai/dto/SchedulingCreateDTO.java b/src/main/java/com/agendeai/dto/SchedulingCreateDTO.java[m
[1mnew file mode 100644[m
[1mindex 0000000..8849397[m
[1m--- /dev/null[m
[1m+++ b/src/main/java/com/agendeai/dto/SchedulingCreateDTO.java[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32mpackage com.agendeai.dto;[m
[32m+[m
[32m+[m[32mimport jakarta.validation.constraints.NotNull;[m
[32m+[m[32mimport lombok.Data;[m
[32m+[m
[32m+[m[32mimport java.time.LocalDateTime;[m
[32m+[m
[32m+[m[32m@Data[m
[32m+[m[32mpublic class SchedulingCreateDTO {[m
[32m+[m
[32m+[m[32m    @NotNull[m
[32m+[m[32m    private Long clientId;[m
[32m+[m
[32m+[m[32m    @NotNull[m
[32m+[m[32m    private Long barberId;[m
[32m+[m
[32m+[m[32m    @NotNull[m
[32m+[m[32m    private Long typeServicesId;[m
[32m+[m
[32m+[m[32m    @NotNull[m
[32m+[m[32m    private LocalDateTime dateTime;[m
[32m+[m[32m}[m
[1mdiff --git a/src/main/java/com/agendeai/dto/SchedulingDTO.java b/src/main/java/com/agendeai/dto/SchedulingDTO.java[m
[1mnew file mode 100644[m
[1mindex 0000000..242c4b6[m
[1m--- /dev/null[m
[1m+++ b/src/main/java/com/agendeai/dto/SchedulingDTO.java[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32mpackage com.agendeai.dto;[m
[32m+[m
[32m+[m[32mimport lombok.Builder;[m
[32m+[m[32mimport lombok.Data;[m
[32m+[m
[32m+[m[32mimport java.time.LocalDateTime;[m
[32m+[m
[32m+[m[32m@Data[m
[32m+[m[32m@Builder[m
[32m+[m[32mpublic class SchedulingDTO {[m
[32m+[m
[32m+[m[32m    private Long id;[m
[32m+[m[32m    private String clientName;[m
[32m+[m[32m    private String barberName;[m
[32m+[m[32m    private String typeServiceName;[m
[32m+[m[32m    private LocalDateTime dateTime;[m
[32m+[m[32m    private String status;[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/main/java/com/agendeai/dto/SchedulingResponseDTO.java b/src/main/java/com/agendeai/dto/SchedulingResponseDTO.java[m
[1mnew file mode 100644[m
[1mindex 0000000..baa04f8[m
[1m--- /dev/null[m
[1m+++ b/src/main/java/com/agendeai/dto/SchedulingResponseDTO.java[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32mpackage com.agendeai.dto;[m
[32m+[m
[32m+[m[32mimport lombok.Data;[m
[32m+[m
[32m+[m[32mimport java.time.LocalDateTime;[m
[32m+[m
[32m+[m[32m@Data[m
[32m+[m[32mpublic class SchedulingResponseDTO {[m
[32m+[m[32m    private Long id;[m
[32m+[m[32m    private Long clientId;[m
[32m+[m[32m    private String clientName;[m
[32m+[m[32m    private Long barberId;[m
[32m+[m[32m    private String barberName;[m
[32m+[m[32m    private Long serviceId;[m
[32m+[m[32m    private String serviceName;[m
[32m+[m[32m    private LocalDateTime dateTime;[m
[32m+[m[32m}[m
[1mdiff --git a/src/main/java/com/agendeai/model/Scheduling.java b/src/main/java/com/agendeai/model/Scheduling.java[m
[1mnew file mode 100644[m
[1mindex 0000000..787bf81[m
[1m--- /dev/null[m
[1m+++ b/src/main/java/com/agendeai/model/Scheduling.java[m
[36m@@ -0,0 +1,41 @@[m
[32m+[m[32mpackage com.agendeai.model;[m
[32m+[m
[32m+[m[32mimport jakarta.persistence.*;[m
[32m+[m[32mimport lombok.*;[m
[32m+[m
[32m+[m[32mimport java.time.LocalDateTime;[m
[32m+[m
[32m+[m[32m@Entity[m
[32m+[m[32m@Table(name = "scheduling")[m
[32m+[m[32m@Data[m
[32m+[m[32m@NoArgsConstructor[m
[32m+[m[32m@AllArgsConstructor[m
[32m+[m[32m@Builder[m
[32m+[m[32mpublic class Scheduling {[m
[32m+[m
[32m+[m[32m    @Id[m
[32m+[m[32m    @GeneratedValue(strategy = GenerationType.IDENTITY)[m
[32m+[m[32m    private Long id;[m
[32m+[m
[32m+[m[32m    @ManyToOne[m
[32m+[m[32m    private Client client;[m
[32m+[m
[32m+[m[32m    @ManyToOne[m
[32m+[m[32m    private Barber barber;[m
[32m+[m
[32m+[m[32m    @ManyToOne[m
[32m+[m[32m    private TypeServices typeServices;[m
[32m+[m
[32m+[m[32m    @Column(nullable = false)[m
[32m+[m[32m    private LocalDateTime dateTime;[m
[32m+[m
[32m+[m[32m    @Enumerated(EnumType.STRING)[m
[32m+[m[32m    @Column(nullable = false)[m
[32m+[m[32m    private StatusScheduling statusScheduling;[m
[32m+[m
[32m+[m[32m    public enum StatusScheduling{[m
[32m+[m[32m        AGENDADO,[m
[32m+[m[32m        CANCELADO,[m
[32m+[m[32m        FINALIZADO[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/src/main/java/com/agendeai/repository/SchedulingRepository.java b/src/main/java/com/agendeai/repository/SchedulingRepository.java[m
[1mnew file mode 100644[m
[1mindex 0000000..83c2413[m
[1m--- /dev/null[m
[1m+++ b/src/main/java/com/agendeai/repository/SchedulingRepository.java[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32mpackage com.agendeai.repository;[m
[32m+[m
[32m+[m[32mimport com.agendeai.model.Scheduling;[m
[32m+[m[32mimport org.springframework.data.jpa.repository.JpaRepository;[m
[32m+[m[32mimport org.springframework.stereotype.Repository;[m
[32m+[m
[32m+[m[32mimport java.time.LocalDateTime;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32m@Repository[m
[32m+[m[32mpublic interface SchedulingRepository extends JpaRepository<Scheduling, Long> {[m
[32m+[m[32m    boolean existsByBarberIdAndDateTime(Long barberId, LocalDateTime dateTime);[m
[32m+[m
[32m+[m[32m    List<Scheduling> findByBarberId(Long barberId);[m
[32m+[m[32m    List<Scheduling> findByClientId(Long clientId);[m
[32m+[m[32m}[m
[1mdiff --git a/src/main/java/com/agendeai/service/SchedulingService.java b/src/main/java/com/agendeai/service/SchedulingService.java[m
[1mnew file mode 100644[m
[1mindex 0000000..4283ea8[m
[1m--- /dev/null[m
[1m+++ b/src/main/java/com/agendeai/service/SchedulingService.java[m
[36m@@ -0,0 +1,94 @@[m
[32m+[m[32mpackage com.agendeai.service;[m
[32m+[m
[32m+[m[32mimport com.agendeai.dto.SchedulingCreateDTO;[m
[32m+[m[32mimport com.agendeai.dto.SchedulingDTO;[m
[32m+[m[32mimport com.agendeai.dto.SchedulingResponseDTO;[m
[32m+[m[32mimport com.agendeai.model.Barber;[m
[32m+[m[32mimport com.agendeai.model.Client;[m
[32m+[m[32mimport com.agendeai.model.Scheduling;[m
[32m+[m[32mimport com.agendeai.model.TypeServices;[m
[32m+[m[32mimport com.agendeai.repository.BarberRepository;[m
[32m+[m[32mimport com.agendeai.repository.ClientRepository;[m
[32m+[m[32mimport com.agendeai.repository.SchedulingRepository;[m
[32m+[m[32mimport com.agendeai.repository.TypeServiceRepository;[m
[32m+[m[32mimport lombok.RequiredArgsConstructor;[m
[32m+[m[32mimport org.springframework.stereotype.Service;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m[32mimport java.util.stream.Collectors;[m
[32m+[m
[32m+[m[32m@Service[m
[32m+[m[32m@RequiredArgsConstructor[m
[32m+[m[32mpublic class SchedulingService {[m
[32m+[m
[32m+[m[32m    private final SchedulingRepository schedulingRepository;[m
[32m+[m[32m    private final ClientRepository clientRepository;[m
[32m+[m[32m    private final BarberRepository barberRepository;[m
[32m+[m[32m    private final TypeServiceRepository typeServiceRepository;[m
[32m+[m
[32m+[m[32m    public SchedulingDTO toSchedule(SchedulingCreateDTO dto){[m
[32m+[m[32m        if(schedulingRepository.existsByBarberIdAndDateTime(dto.getBarberId(), dto.getDateTime())){[m
[32m+[m[32m            throw new RuntimeException("Hor√°rio j√° ocupado para esse barbeiro");[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        Client client =clientRepository.findById(dto.getClientId()).orElseThrow(()-> new RuntimeException("Cliente n√£o encontrado"));[m
[32m+[m[32m        Barber barber = barberRepository.findById(dto.getBarberId()).orElseThrow(()-> new RuntimeException("Barbeiro n√£o encontrado"));[m
[32m+[m[32m        TypeServices services = typeServiceRepository.findById(dto.getTypeServicesId()).orElseThrow(()-> new RuntimeException("Servi√ßo n√£o encontrado"));[m
[32m+[m
[32m+[m[32m        Scheduling scheduling = Scheduling.builder()[m
[32m+[m[32m                .client(client)[m
[32m+[m[32m                .barber(barber)[m
[32m+[m[32m                .typeServices(services)[m
[32m+[m[32m                .dateTime(dto.getDateTime())[m
[32m+[m[32m                .statusScheduling(Scheduling.StatusScheduling.AGENDADO)[m
[32m+[m[32m                .build();[m
[32m+[m[32m        return toDTO(schedulingRepository.save(scheduling));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //Faz busca por barbeiro[m
[32m+[m[32m    public List<SchedulingDTO> findByBarber(Long barberId){[m
[32m+[m[32m        return schedulingRepository.findByBarberId(barberId).stream()[m
[32m+[m[32m                .map(this::toDTO).collect(Collectors.toList());[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //Faz busca por cliente[m
[32m+[m[32m    public List<SchedulingDTO> findByClient(Long clientId){[m
[32m+[m[32m        return schedulingRepository.findByClientId(clientId).stream()[m
[32m+[m[32m                .map(this::toDTO).collect(Collectors.toList());[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m[32m    private SchedulingDTO toDTO(Scheduling sch){[m
[32m+[m[32m        return SchedulingDTO.builder()[m
[32m+[m[32m                .id(sch.getId())[m
[32m+[m[32m                .clientName(sch.getClient().getName())[m
[32m+[m[32m                .barberName(sch.getBarber().getName())[m
[32m+[m[32m                .typeServiceName(sch.getTypeServices().getNameService())[m
[32m+[m[32m                .dateTime(sch.getDateTime())[m
[32m+[m[32m                .status(sch.getStatusScheduling().name())[m
[32m+[m[32m                .build();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public List<SchedulingResponseDTO> listAll() {[m
[32m+[m[32m        return schedulingRepository.findAll().stream().map(scheduling -> {SchedulingResponseDTO dto = new SchedulingResponseDTO();[m
[32m+[m[32m        dto.setId(scheduling.getId());[m
[32m+[m[32m        dto.setDateTime(scheduling.getDateTime());[m
[32m+[m
[32m+[m[32m        var client = scheduling.getClient();[m
[32m+[m[32m        var barber = scheduling.getBarber();[m
[32m+[m[32m        var service = scheduling.getTypeServices();[m
[32m+[m
[32m+[m[32m        dto.setClientId(client.getId());[m
[32m+[m[32m        dto.setClientName(client.getName());[m
[32m+[m[32m        dto.setBarberId(barber.getId());[m
[32m+[m[32m        dto.setBarberName(barber.getName());[m
[32m+[m[32m        dto.setServiceId(service.getId());[m
[32m+[m[32m        dto.setServiceName(service.getNameService());[m
[32m+[m
[32m+[m[32m        return dto;[m
[32m+[m
[32m+[m[32m        }).toList();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/main/resources/application.properties b/src/main/resources/application.properties[m
[1mindex f93313f..3b3218c 100644[m
[1m--- a/src/main/resources/application.properties[m
[1m+++ b/src/main/resources/application.properties[m
[36m@@ -1,12 +1,9 @@[m
 spring.application.name=Agende Ai[m
[31m-spring:[m
[31m-    datasource:[m
[31m-        url: jdbc:postgresql://localhost:5432/agendeai[m
[31m-        username: postgres[m
[31m-        password: postgres[m
[31m-    jpa:[m
[31m-        hibernate:[m
[31m-            ddl-auto: update[m
[31m-        show-sql: true[m
[31m-        propieties:[m
[31m-            format_sql: true[m
[32m+[m[32mspring.datasource.url=jdbc:postgresql://localhost:5432/agendeai[m
[32m+[m[32mspring.datasource.username=postgres[m
[32m+[m[32mspring.datasource.password=lima[m
[32m+[m[32mspring.jpa.hibernate.ddl-auto=update[m
[32m+[m[32mspring.jpa.show-sql=true[m
[32m+[m[32mspring.jpa.properties.format_sql=true[m
[32m+[m
[32m+[m[32mspring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect[m
